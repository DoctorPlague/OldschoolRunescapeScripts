import org.osbot.rs07.api.model.Entity;
import org.osbot.rs07.api.ui.RS2Widget;
import org.osbot.rs07.script.Script;
import org.osbot.rs07.script.ScriptManifest;

import java.awt.*;

@ScriptManifest(author = "Plague Doctor", info = "My first script", name = "Smelter", version = 0, logo = "")
public class main extends Script {	
	
	

	@Override
	public void onStart() {
		log("Welcome to JSmelter by PlagueDoctor.");		
		log("Enjoy the script.");
	}

	private enum State {
		SMELT, BANK, WAIT
	};

	private State getState() {
	    if(inventory.isFull()) // If our inventory is full, dont do anything, bank instead
	    {
	        return State.BANK;
	    }
	    if(Locations.lumbridgeFurnaceRoom.contains(myPlayer())) // If we are in the lumbridge furance room, smelt
	    {
	        return State.SMELT;
	    }
	    else // Otherwise walk to the lumbridge furnace room
	    {
	        return State.WALK_TO_FURNACE;
	    }
	}

	@Override
	public int onLoop() throws InterruptedException {
	    switch  (getState()) {
	        case SMELT:
	        Entity furnace = objects.closest("Furnace");
	        if(furnace != null)
	        {
	            if(getWidgets().get(311, 2) != null) // If its not null it means the smelt menu is open
	            {
	                // So we know that the menu is open, now we must find the button for bronze.
	                // We could do this by going through all the children of 311, and look for ones named Bronze or we can go hard coded.
	                // For now we go hard coded.
	 
	                // So looking in the osbot with widgets ticked we see that Bronze is 311, 14
	                // So we do
	                RS2Widget bronzeButton = getWidgets().get(311, 14);
	                if(bronzeButton != null) // Check that its not null, because if it was null and we tried to interact with it we would get errors
	                {
	                    bronzeButton.interact();
	                }
	            }
	            else // If it is null, then we haven't got it open so we want to open it
	            {
	                furnace.interact("Smelt");
	            }
	        }
	        break;
	       
	        case BANK:
	        break;
	       
	        case WALK_TO_FURNACE:
	        break;
	    }
	
		return random(200, 300);
	}

	@Override
	public void onExit() {
		log("Thanks for running my Smelter!");
	}

	@Override
	public void onPaint(Graphics2D g) {
		Point mP = getMouse().getPosition();
        g.setPaint(Color.white);
        g.drawLine(mP.x - 1, 0, mP.x - 1, 500); // Above X
        g.drawLine(mP.x + 1, 0, mP.x + 1, 500); // Below X
        g.drawLine(0, mP.y - 1, 800, mP.y - 1); // Left Y
        g.drawLine(0, mP.y + 1, 800, mP.y + 1); // Right Y
        g.setPaint(Color.black);
        g.drawLine(mP.x, 0, mP.x, 500); // At X
        g.drawLine(0, mP.y, 800, mP.y); // At Y

	}

}
import org.osbot.rs07.api.map.Area;
import org.osbot.rs07.api.map.Position;
import org.osbot.rs07.api.model.Entity;
import org.osbot.rs07.script.Script;
import org.osbot.rs07.script.ScriptManifest;

import java.awt.*;

@ScriptManifest(author = "Plague Doctor", info = "My first script", name = "Smelter", version = 0, logo = "")
public class main extends Script {	

	@Override
	public void onStart() {
		log("Welcome to Simple Tea Thiever by Apaec.");
		log("If you experience any issues while running this script please report them to me on the forums.");
		log("Enjoy the script, gain some thieving levels!.");
	}

	private enum State {
		SMELT, BANK, WAIT
	};

	private State getState() {
		Entity furnace = objects.closest("Furnace");		
		if (!inventory.isEmpty())
			return State.SMELT;
		if (furnace != null)
			return State.BANK;
		return State.WAIT;
	}

	@Override
	public int onLoop() throws InterruptedException {
		switch (getState()) {
		case SMELT:
			Entity furnace = objects.closest("Furnace");
			if (furnace != null)
			{
				furnace.interact("Smelt-Furnace");
				furnace.interact("Smelt-10-Bronze");
			}			
			break;
		case BANK:
			if(myPlayer().isMoving() && myPlayer().isAnimating())
	    		return 700;
	        // Called every loop, the time between this call of loop and the next one depends on what you return
	    	
	    	if(!Locations.faladorBankArea.contains(myPlayer()))
	    	{	    		
	    		getWalking().webWalk(Locations.faladorBank);
	    	}
			break;
		case WAIT:
			sleep(random(500, 700));
			break;
		}
		return random(200, 300);
	}

	@Override
	public void onExit() {
		log("Thanks for running my Tea Thiever!");
	}

	@Override
	public void onPaint(Graphics2D g) {

	}

}